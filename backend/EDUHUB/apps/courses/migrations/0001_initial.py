# Generated by Django 5.2.1 on 2025-06-01 07:34

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Course",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200)),
                ("code", models.CharField(max_length=20)),
                ("description", models.TextField()),
                (
                    "duration_years",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ]
                    ),
                ),
                (
                    "minimum_grade",
                    models.CharField(
                        choices=[
                            ("A", "A"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B", "B"),
                            ("B-", "B-"),
                            ("C+", "C+"),
                            ("C", "C"),
                            ("C-", "C-"),
                            ("D+", "D+"),
                            ("D", "D"),
                            ("D-", "D-"),
                        ],
                        max_length=5,
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("engineering", "Engineering"),
                            ("medicine", "Medicine & Health Sciences"),
                            ("business", "Business & Economics"),
                            ("education", "Education"),
                            ("arts", "Arts & Humanities"),
                            ("sciences", "Pure Sciences"),
                            ("agriculture", "Agriculture"),
                            ("law", "Law"),
                            ("technology", "Information Technology"),
                            ("social_sciences", "Social Sciences"),
                        ],
                        max_length=100,
                    ),
                ),
                (
                    "tuition_fee_per_year",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "application_fee",
                    models.DecimalField(decimal_places=2, default=0, max_digits=8),
                ),
                ("application_deadline", models.DateField(blank=True, null=True)),
                ("intake_months", models.JSONField(default=list)),
                ("career_prospects", models.TextField(blank=True)),
                ("accreditation", models.CharField(blank=True, max_length=200)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Subject",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("code", models.CharField(max_length=10, unique=True)),
                ("description", models.TextField(blank=True)),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("mathematics", "Mathematics"),
                            ("sciences", "Sciences"),
                            ("languages", "Languages"),
                            ("humanities", "Humanities"),
                            ("technical", "Technical"),
                            ("arts", "Arts"),
                        ],
                        max_length=50,
                    ),
                ),
                ("is_core", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["name"],
                "indexes": [
                    models.Index(
                        fields=["category"], name="courses_sub_categor_5d1121_idx"
                    ),
                    models.Index(
                        fields=["is_core"], name="courses_sub_is_core_c20d08_idx"
                    ),
                    models.Index(
                        fields=["is_active"], name="courses_sub_is_acti_7c6ad7_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="CourseSubjectRequirement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "minimum_grade",
                    models.CharField(
                        choices=[
                            ("A", "A"),
                            ("A-", "A-"),
                            ("B+", "B+"),
                            ("B", "B"),
                            ("B-", "B-"),
                            ("C+", "C+"),
                            ("C", "C"),
                            ("C-", "C-"),
                            ("D+", "D+"),
                            ("D", "D"),
                            ("D-", "D-"),
                        ],
                        max_length=5,
                    ),
                ),
                ("is_mandatory", models.BooleanField(default=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="courses.course"
                    ),
                ),
                (
                    "alternative_subjects",
                    models.ManyToManyField(
                        blank=True, related_name="alternative_for", to="courses.subject"
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="courses.subject",
                    ),
                ),
            ],
            options={
                "unique_together": {("course", "subject")},
            },
        ),
        migrations.AddField(
            model_name="course",
            name="required_subjects",
            field=models.ManyToManyField(
                through="courses.CourseSubjectRequirement", to="courses.subject"
            ),
        ),
        migrations.CreateModel(
            name="University",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("name", models.CharField(max_length=200, unique=True)),
                ("code", models.CharField(max_length=10, unique=True)),
                ("location", models.CharField(max_length=100)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("public", "Public University"),
                            ("private", "Private University"),
                            ("college", "College"),
                            ("technical", "Technical Institute"),
                        ],
                        max_length=50,
                    ),
                ),
                ("website", models.URLField(blank=True, null=True)),
                ("description", models.TextField(blank=True)),
                (
                    "established_year",
                    models.PositiveIntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1800),
                            django.core.validators.MaxValueValidator(2030),
                        ],
                    ),
                ),
                ("logo", models.URLField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["name"], name="courses_uni_name_600e16_idx"),
                    models.Index(fields=["type"], name="courses_uni_type_c78b2a_idx"),
                    models.Index(
                        fields=["is_active"], name="courses_uni_is_acti_35cf1c_idx"
                    ),
                ],
            },
        ),
        migrations.AddField(
            model_name="course",
            name="university",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="courses",
                to="courses.university",
            ),
        ),
        migrations.CreateModel(
            name="UserSelectedCourse",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("priority", models.PositiveIntegerField(default=1)),
                ("notes", models.TextField(blank=True)),
                ("is_applied", models.BooleanField(default=False)),
                ("application_date", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="courses.course"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="selected_courses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["priority", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="CourseApplication",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("submitted", "Submitted"),
                            ("under_review", "Under Review"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                            ("waitlisted", "Waitlisted"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "application_number",
                    models.CharField(blank=True, max_length=50, unique=True),
                ),
                ("submitted_at", models.DateTimeField(blank=True, null=True)),
                ("documents_uploaded", models.JSONField(default=dict)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applications",
                        to="courses.course",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="applications",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("user", "course")},
            },
        ),
        migrations.CreateModel(
            name="CourseReview",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
                ("is_approved", models.BooleanField(default=False)),
                ("is_anonymous", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="courses.course",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "unique_together": {("course", "user")},
            },
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["category"], name="courses_cou_categor_fec4a4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["minimum_grade"], name="courses_cou_minimum_b5d3f6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["tuition_fee_per_year"], name="courses_cou_tuition_72de5a_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["is_active"], name="courses_cou_is_acti_3c7e41_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="course",
            index=models.Index(
                fields=["university"], name="courses_cou_univers_5f4e01_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="course",
            unique_together={("code", "university")},
        ),
        migrations.AlterUniqueTogether(
            name="userselectedcourse",
            unique_together={("user", "course")},
        ),
    ]
